#имя файла: Task 20.py
#номер версии: 1.0
#автор и его учебная группа: Александровский А.П., ЭУ-142
#дата создания: 22.05.2019
#связанные файлы: пакет numpy
#версия Python: 3.6
#ОПИСАНИЕ:  Создать квадратную матрицу A, имеющую N строк и N столбцов со
            #случайными элементами. Определить произведение элементов,
            #расположенных параллельно побочной диагонали (ближайшие к побочной).
            #Элементы побочной диагонали имеют индексы от [N,0] до [0,N].





# Подключение библиотеки Numpy и Random
import numpy as np
import random

# Число строк и столбцов
N = random.randint(2, 10)

# Создание матрицы
A = np.random.randint(0, 10, (N, N))
print(str(A) + "\n")

# Нахождение элементов расположенных параллельно побочной диагонали
a = b = np.fliplr(A).diagonal(1)
a_prod = a.prod()
print("Элементы которые выше побочной диагонали: \n" + str(a) + "\nИх сумма = " + str(a_prod))

b = np.fliplr(A).diagonal(-1)
b_prod = b.prod()
print("Элементы которые ниже побочной диагонали: \n" + str(b) + "\nИх сумма = " + str(b_prod))