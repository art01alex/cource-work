#имя файла: Task 6.py
#номер версии: 1.0
#автор и его учебная группа: Александровский А.П., ЭУ-142
#дата создания: 22.05.2019
#связанные файлы: пакет numpy
#версия Python: 3.6
#ОПИСАНИЕ:  Создать прямоугольную матрицу A, имеющую N строк и M столбцов со
            # случайными элементами. Найти сумму элементов всей матрицы.
            # Определить, какую долю в этой сумме составляет сумма элементов каждого
            # столбца. Результат оформить в виде матрицы из N + 1 строк и M столбцов.



# Подключение библиотеки Numpy и Random
import numpy as np
import random

# Число строк и столбцов
N = random.randint(2, 10)
M = random.randint(1, 10)

# Так как матрица должна быть прямоугольной, то N не может быть равно M
while N == M:
    N = random.randint(1, 10)
    M = random.randint(1, 10)

# Создание матрицы
A = np.random.randint(0, 10, (N, M)).astype(np.float64)
print(str(A) + "\n")

# Определение суммы элементов всей матрицы
Sum = A.sum()
print("Сумма элементов всей матрицы: " + str(Sum) + "\n")

#Определение суммы всех элентов кождого столбца матрицы
Sum_column = A.sum(axis=0)

#Определение доли суммы
X = []
for i in range(0, M):
    n = Sum_column[i] / Sum
    X.append(n)

#Добавление строки
A = np.vstack((A, X))
print("\nНовая матрица: \n" + str(A))