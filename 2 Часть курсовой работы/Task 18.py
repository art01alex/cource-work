#имя файла: Task 18.py
#номер версии: 1.0
#автор и его учебная группа: Александровский А.П., ЭУ-142
#дата создания: 22.05.2019
#связанные файлы: пакет numpy
#версия Python: 3.6
#ОПИСАНИЕ:  Создать прямоугольную матрицу A, имеющую N строк и M столбцов со
            #случайными элементами. Найти сумму элементов, стоящих на главной
            #диагонали, и сумму элементов, стоящих на побочной диагонали (элементы
            #главной диагонали имеют индексы от [0,0] до [N,N], а элементы побочной
            #диагонали — от [N,0] до [0,N]).




# Подключение библиотеки Numpy и Random
import numpy as np
import random

# Число строк и столбцов
N = random.randint(2, 10)
M = random.randint(2, 10)

# Так как матрица должна быть прямоугольной, то N не может быть равно M
while N == M:
    N = random.randint(2, 10)
    M = random.randint(2, 10)

# Создание матрицы
A = np.random.randint(0, 10, (N, M))
print(str(A) + "\n")

# Нахождение главной диагонали и её суммы
a = np.diagonal(A)
a_sum = a.sum()
print("Главная диагональ: \n" + str(a) + "\n Её сумма = " + str(a_sum))

# Нахождение побочной диагонали и её суммы
b = np.fliplr(A).diagonal(0)
b_sum = b.sum()
print("Побочная диагональ: \n" + str(b) + "\n Её сумма = " + str(b_sum))