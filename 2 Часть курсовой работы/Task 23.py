#имя файла: Task 23.py
#номер версии: 1.0
#автор и его учебная группа: Александровский А.П., ЭУ-142
#дата создания: 22.05.2019
#связанные файлы: пакет numpy
#версия Python: 3.6
#ОПИСАНИЕ:  Создать квадратную матрицу A, имеющую N строк и N столбцов со
            #случайными элементами. Найти сумму элементов, расположенных выше
            #главной диагонали, и произведение элементов, расположенных выше
            #побочной диагонали (элементы главной диагонали имеют индексы от [0,0]
            #до [N,N], а элементы побочной диагонали — от [N,0] до [0,N]).





# Подключение библиотеки Numpy и Random
import numpy as np
import random

# Число строк и столбцов
N = random.randint(2, 5)

# Создание матрицы
A = np.random.randint(1, 10, (N, N))
print(str(A) + "\n")

# Нахождение главной диагонали и её суммы
iu = np.triu_indices(N, 1)
a = A[iu]
a = np.sum(np.array(a))
print("\nCумма элементов выше главной диагонали = " + str(a))

# Нахождение побочной диагонали и её суммы
b = np.fliplr(A)[iu]
b = np.prod(np.array(b))
print("\nПроизведение элементов выше побочной диагонали = " + str(b))