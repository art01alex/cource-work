#имя файла: Task 26.py
#номер версии: 1.0
#автор и его учебная группа: Александровский А.П., ЭУ-142
#дата создания: 22.05.2019
#связанные файлы: пакет numpy
#версия Python: 3.6
#ОПИСАНИЕ:  Создать прямоугольную матрицу A, имеющую N строк и M столбцов со
            #случайными элементами. Дан номер строки L и номер столбца K, при
            #помощи которых исходная матрица разбивается на четыре части. Найти
            #среднее арифметическое элементов каждой части.




# Подключение библиотеки Numpy и Random
import numpy as np
import random

# Число строк и столбцов, число L
N = random.randint(2, 10)
M = random.randint(1, 10)
L = random.randint(1, N)
K = random.randint(1, M)

# Так как матрица должна быть прямоугольной, то N не может быть равно M
while N == M or L == N or K == M :
    N = random.randint(1, 10)
    M = random.randint(1, 10)

# Создание матрицы
A = np.random.randint(0, 10, (N, M))
print(str(A) + "\n")
print("Число N = " + str(N))
print("Число M = " + str(M))
print("Число L = " + str(L))
print("Число K = " + str(K))

# Разделение матрицы на 4 части и нахождение среднее арифметическое
x = A[0:L ,0:K]
x_sum = x.mean()
print("Вверхняя левая часть: среднее арифметическое = " + str(x_sum) + "\n" + str(x))

y = A[L: ,0 :K]
y_sum = y.mean()
print("\nНижняя левая часть: среднее арифметическое = " + str(y_sum) + "\n" + str(y))

z = A[0:L ,K:]
z_sum = z.mean()
print("\nВверхняя правая часть: среднее арифметическое = " + str(z_sum) + "\n" + str(z))

a = A[L: ,K:]
a_sum = a.mean()
print("\nНижняя правая часть: среднее арифметическое = " + str(a_sum) + "\n" + str(a))

